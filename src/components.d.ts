/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface Sgb9App {

    }
  }

  interface HTMLSgb9AppElement extends StencilComponents.Sgb9App, HTMLStencilElement {}

  var HTMLSgb9AppElement: {
    prototype: HTMLSgb9AppElement;
    new (): HTMLSgb9AppElement;
  };
  interface HTMLElementTagNameMap {
    'sgb9-app': HTMLSgb9AppElement;
  }
  interface ElementTagNameMap {
    'sgb9-app': HTMLSgb9AppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sgb9-app': JSXElements.Sgb9AppAttributes;
    }
  }
  namespace JSXElements {
    export interface Sgb9AppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface Sgb9Radio {
      'checked': boolean;
      'dummy': number;
      'group': string;
      'idValue': string;
      'label': string;
      'value': number;
    }
  }

  interface HTMLSgb9RadioElement extends StencilComponents.Sgb9Radio, HTMLStencilElement {}

  var HTMLSgb9RadioElement: {
    prototype: HTMLSgb9RadioElement;
    new (): HTMLSgb9RadioElement;
  };
  interface HTMLElementTagNameMap {
    'sgb9-radio': HTMLSgb9RadioElement;
  }
  interface ElementTagNameMap {
    'sgb9-radio': HTMLSgb9RadioElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sgb9-radio': JSXElements.Sgb9RadioAttributes;
    }
  }
  namespace JSXElements {
    export interface Sgb9RadioAttributes extends HTMLAttributes {
      'checked'?: boolean;
      'dummy'?: number;
      'group'?: string;
      'idValue'?: string;
      'label'?: string;
      'onCheckRadioChange'?: (event: CustomEvent) => void;
      'value'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;